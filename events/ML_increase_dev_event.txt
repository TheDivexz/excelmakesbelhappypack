namespace = increase_dev_event

country_event = {
	# decision trigger
	id = increase_dev_event.21
	title = increase_dev_event.21.t
	desc = increase_dev_event.21.d
	picture = INVENTION_eventPicture
	hidden = yes

	mean_time_to_happen = {
		days = 0
	}

	trigger = {
		REB = { check_variable = { which = dev_click_max	value = 600 } }
		NOT = { is_SPEC_TAG = yes }
		NOT = { had_country_flag = { flag = HitPointCap 	days = 31 } }
		NOT = { has_country_flag = HitPointCap }
		OR = {
			trigger_of_monarch_power = { power_type = adm_power 	min = 660 }
			trigger_of_monarch_power = { power_type = dip_power 	min = 660 }
			trigger_of_monarch_power = { power_type = mil_power 	min = 660 }
		}
	}

	immediate = {
		set_country_flag = HitPointCap
		log = "Hit point cap for nation [This.GetName]"
	}

	option = {
		#hidden
	}
}

country_event = {
	# startup event
	id = increase_dev_event.1
	title = increase_dev_event.1.t
	desc = increase_dev_event.1.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes

	trigger = {
		NOT = { is_SPEC_TAG = yes }
	}

	immediate = {
		clr_country_flag = HitPointCap
		HiddenUpdateDevFlagEffect = yes	
		HiddenUpdateDipDevFlagEffect = yes
	}

	option = {	
		#hidden
	}
}

province_event = {
	# on_action dev click
	id = increase_dev_event.2
	title = increase_dev_event.2.t
	desc = increase_dev_event.2.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes

	trigger = {
		OR = {
		 has_province_flag = CheapDevTargetFlag 
		 has_province_flag = CheapDipTargetFlag
		}
	}

	immediate = {	
		owner = {
			clr_country_flag = HitPointCap
			HiddenUpdateDevFlagEffect = yes
			HiddenUpdateDipDevFlagEffect = yes
		}
	}

	option = {	
		#hidden
	}
}

country_event = {
	# adjust minimum
	id = increase_dev_event.11
	title = increase_dev_event.11.t
	desc = increase_dev_event.11.d
	picture = INVENTION_eventPicture
	fire_only_once = yes

	mean_time_to_happen = {
		days = 0
	}

	trigger = {
		ai = no
	}

	immediate = {
		hidden_effect = {
			REB = { set_variable = { which = dev_click_max	value = 900 } }
		}
	}

	option = {
		name = increase_dev_event.11.aa
		custom_tooltip = increase_dev_event.11.aa.t
		hidden_effect = {
			REB = { set_variable = { which = dev_click_max	value = 960 } }
		}
	}

	option = {
		name = increase_dev_event.11.bb
		custom_tooltip = increase_dev_event.11.bb.t
		highlight = yes
		hidden_effect = {
			REB = { set_variable = { which = dev_click_max	value = 900 } }
		}
	}

	option = {
		name = increase_dev_event.11.dd
		custom_tooltip = increase_dev_event.11.dd.t
		hidden_effect = {
			REB = { set_variable = { which = dev_click_max	value = 780 } }
		}
	}

	option = {
		name = increase_dev_event.11.ff
		custom_tooltip = increase_dev_event.11.ff.t
		hidden_effect = {
			REB = { set_variable = { which = dev_click_max	value = 660 } }
		}
	}

	option = {
		name = increase_dev_event.11.gg
		custom_tooltip = increase_dev_event.11.gg.t
		highlight = yes
		hidden_effect = {
			REB = { set_variable = { which = dev_click_max	value = 0   } }
		}
	}
}

country_event = {
	# institutions trigger
	id = increase_dev_event.9
	title = increase_dev_event.9.t
	desc = increase_dev_event.9.d
	picture = INVENTION_eventPicture
	hidden = yes

	mean_time_to_happen = {
		days = 0
	}

	trigger = {
		is_month_january = yes
		REB = {
			check_variable = { which = dev_click_max	value = 600 }	
			OR = {
				had_country_flag = { flag = insCount	days = 60 }	
				NOT = { has_country_flag = insCount }
			}
		}
	}

	immediate = {
		REB = {
			clr_country_flag = insCount
			set_country_flag = insCount
			country_event = { id = increase_dev_event.10	days = 1 }
		}
	}

	option = {
		#hidden
	}
}

country_event = {
	# institutions
	id = increase_dev_event.10
	title = increase_dev_event.10.t
	desc = increase_dev_event.10.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes

	trigger = {
		#moved to increase_dev_event.9
	}

	immediate = {
		REB = {
			log = "yearly institution counter for [This.GetName]"
			
			set_variable = { which = feudalismNo		value = 1.5 }
			set_variable = { which = renaissanceNo		value = 1	}
			set_variable = { which = newWorldINo		value = 1	}
			set_variable = { which = printingPressNo	value = 1	}
			set_variable = { which = globalTradeNo		value = 1	}
			set_variable = { which = manufactoriesNo	value = 1	}
			set_variable = { which = enlightenmentNO	value = 1	}
			
			export_to_variable = { which = current_year	value = trigger_value:is_year }
			
			trigger_switch = {
				on_trigger = is_institution_enabled
				renaissance = {
					if = { limit = { NOT = { check_variable = { which = renaissance_year value = 1449 } } } # check if first time
						set_variable = { which = renaissance_year	which = current_year } # then it is the birth of the institution
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1450 }
					subtract_variable 	  = { which = penalty		which = renaissance_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalismNo			which = penalty }	log = "feudalismNo [This.feudalismNo.GetValue]"
					change_variable = { which = renaissanceNo		which = penalty }	log = "renaissanceNo [This.renaissanceNo.GetValue]"
				}
				new_world_i = {
					if = { limit = { NOT = { check_variable = { which = new_world_i_year value = 1499 } } }
						set_variable = { which = new_world_i_year	which = current_year } 
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1500 }
					subtract_variable 	  = { which = penalty		which = new_world_i_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalismNo			which = penalty }	log = "feudalismNo[This.feudalismNo.GetValue]"
					change_variable = { which = renaissanceNo		which = penalty }	log = "renaissanceNo[This.renaissanceNo.GetValue]"
					change_variable = { which = newWorldINo			which = penalty }	log = "newWorldINo[This.newWorldINo.GetValue]"
				}
				printing_press = {
					if = { limit = { NOT = { check_variable = { which = printing_press_year value = 1549 } } }
						set_variable = { which = printing_press_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1550 }
					subtract_variable 	  = { which = penalty		which = printing_press_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalismNo			which = penalty }
					change_variable = { which = renaissanceNo		which = penalty }
					change_variable = { which = newWorldINo			which = penalty }
					change_variable = { which = printingPressNo		which = penalty }
				}
				global_trade = {
					if = { limit = { NOT = { check_variable = { which = global_trade_year value = 1599 } } }
						set_variable = { which = global_trade_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1600 }
					subtract_variable 	  = { which = penalty		which = global_trade_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalismNo			which = penalty }
					change_variable = { which = renaissanceNo		which = penalty }
					change_variable = { which = newWorldINo			which = penalty }
					change_variable = { which = printingPressNo		which = penalty }
					change_variable = { which = globalTradeNo		which = penalty }
				}
				manufactories = {
					if = { limit = { NOT = { check_variable = { which = manufactories_year value = 1649 } } }
						set_variable = { which = manufactories_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1650 }
					subtract_variable 	  = { which = penalty		which = manufactories_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalismNo			which = penalty }
					change_variable = { which = renaissanceNo		which = penalty }
					change_variable = { which = newWorldINo			which = penalty }
					change_variable = { which = printingPressNo		which = penalty }
					change_variable = { which = globalTradeNo		which = penalty }
					change_variable = { which = manufactoriesNo		which = penalty }
				}
				enlightenment = {
					if = { limit = { NOT = { check_variable = { which = enlightenment_year value = 1699 } } }
						set_variable = { which = enlightenment_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1700 }
					subtract_variable 	  = { which = penalty		which = enlightenment_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalismNo			which = penalty }
					change_variable = { which = renaissanceNo		which = penalty }
					change_variable = { which = newWorldINo			which = penalty }
					change_variable = { which = printingPressNo		which = penalty }
					change_variable = { which = globalTradeNo		which = penalty }
					change_variable = { which = manufactoriesNo		which = penalty }
					change_variable = { which = enlightenmentNO		which = penalty }
				}
			}
		}
	}
	
	option = {
		#hidden
	}
}

country_event = {
	# update lowest dev cost provence
	id = increase_dev_event.3
	title = increase_dev_event.3.t
	desc = increase_dev_event.3.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes

	trigger = {
		always = yes
	}

	immediate = {
		HiddenUpdateDevFlagEffect = yes
		#HiddenUpdateDipDevFlagEffect = yes

		random_owned_province = {
			limit = {
				has_province_flag = CheapDevTargetFlag
			}
			export_dev_cost_of_province = { name = LocalDeVCost }
			owner = {
				hidden_effect = {
					clr_country_flag = HitPointCap

						 set_variable = { which = LocalDeVCost		which = PREV }
					multiply_variable = { which = LocalDeVCost		value = -1 }
						 set_variable = { which = PrevLocalDeVCost	which = LocalDeVCost }
					log = "[This.LocalDeVCost.GetValue] lost that much adm to dev [Prev.GetName] as this [This.GetName]"
					add_power_effect = { command = add_adm_power	variable = LocalDeVCost }

					change_variable = { which = dev_adm_clicks	value = 1 }
					change_variable = { which = dev_sum_clicks	value = 1 }
				}
			}
			add_base_tax = 1
		}
	}

	option = {
		#hidden
	}
}
		
country_event = {
	# update lowest dev cost provence
	id = increase_dev_event.4
	title = increase_dev_event.4.t
	desc = increase_dev_event.4.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes

	trigger = {
		always = yes
	}

	immediate = {
		HiddenUpdateDevFlagEffect = yes
		HiddenUpdateDipDevFlagEffect = yes

		random_owned_province = {
			limit = {
				has_province_flag = CheapDipTargetFlag
			}
			export_dev_cost_of_province = { name = LocalDeVCost }
			owner = {
				hidden_effect = {
					clr_country_flag = HitPointCap

						 set_variable = { which = LocalDeVCost		which = PREV }
					multiply_variable = { which = LocalDeVCost		value = -1 }
						 set_variable = { which = PrevLocalDeVCost	which = LocalDeVCost }
					log = "[This.LocalDeVCost.GetValue] lost that much dip to dev [Prev.GetName] as this [This.GetName]"
					add_power_effect = { command = add_dip_power	variable = LocalDeVCost }

					change_variable = { which = dev_dip_clicks	value = 1 }
					change_variable = { which = dev_sum_clicks	value = 1 }
				}
			}
			add_base_production = 1
		}
	}

	option = {
		#hidden
	}
}		

country_event = {
	# update lowest dev cost provence
	id = increase_dev_event.5
	title = increase_dev_event.5.t
	desc = increase_dev_event.5.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes

	trigger = {
		always = yes
	}

	immediate = {
		HiddenUpdateDevFlagEffect = yes
		#HiddenUpdateDipDevFlagEffect = yes

		random_owned_province = {
			limit = {
				has_province_flag = CheapDevTargetFlag
			}
			export_dev_cost_of_province = { name = LocalDeVCost }
			owner = {
				hidden_effect = {
					clr_country_flag = HitPointCap

						 set_variable = { which = LocalDeVCost		which = PREV }
					multiply_variable = { which = LocalDeVCost		value = -1 }
						 set_variable = { which = PrevLocalDeVCost	which = LocalDeVCost }
					log = "[This.LocalDeVCost.GetValue] lost that much mil to dev [Prev.GetName] as this [This.GetName]"
					add_power_effect = { command = add_mil_power	variable = LocalDeVCost }

					change_variable = { which = dev_mil_clicks	value = 1 }
					change_variable = { which = dev_sum_clicks	value = 1 }
				}
			}
			add_base_manpower = 1
		}
	}

	option = {
		#hidden
	}
}