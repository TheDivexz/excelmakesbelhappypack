namespace = increase_dev_event

country_event = {
	# decision trigger
	id = increase_dev_event.21
	title = increase_dev_event.21.t
	desc = increase_dev_event.21.d
	picture = INVENTION_eventPicture
	hidden = yes
	mean_time_to_happen = {
		days = 0
	}
	trigger = {
		REB = {
			check_variable = { #disable option
				which = dev_click_max
				value = 600
			}
		}
		NOT = { is_SPEC_TAG = yes }
		NOT = {
			had_country_flag = {
				flag = HitPointCap
				days = 31
			}
		}
		NOT = { has_country_flag = HitPointCap }
		OR = {
			trigger_of_monarch_power = {
				power_type = adm_power
				min = 660
			}
			trigger_of_monarch_power = {
				power_type = dip_power
				min = 660
			}
			trigger_of_monarch_power = {
				power_type = mil_power
				min = 660
			}
		}
	}

	immediate = {
		set_country_flag = HitPointCap
		log = "[This.GetName] HitPointCap"
	}
	
	option = {	
		#hidden
	}
}

country_event = {
	# startup event / dev update
	id = increase_dev_event.1
	title = increase_dev_event.1.t
	desc = increase_dev_event.1.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes
	trigger = { # do not trigger for special tags
		NOT = { is_SPEC_TAG = yes }
	}

	immediate = {
		clr_country_flag = HitPointCap
		HiddenUpdateDevFlagEffect = yes	
		HiddenUpdateDipDevFlagEffect = yes
	}

	option = {	
		#hidden
	}
}

province_event = {
	# on_action dev click
	id = increase_dev_event.2
	title = increase_dev_event.2.t
	desc = increase_dev_event.2.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	hidden = yes
	trigger = {
		OR = {
		 has_province_flag = CheapDevTargetFlag 
		 has_province_flag = CheapDipTargetFlag
		}
	}


	immediate = {	
		owner = { clr_country_flag = HitPointCap }
		HiddenUpdateDevFlagEffect = yes
		HiddenUpdateDipDevFlagEffect = yes
	}

	option = {	
		#hidden
	}
}

country_event = {
	# adjust minimum
	id = increase_dev_event.11
	title = increase_dev_event.11.t
	desc = increase_dev_event.11.d
	picture = INVENTION_eventPicture
	is_triggered_only = yes
	trigger = {
		ai = no
	}
	immediate = {
		hidden_effect = {
			REB = {
				set_variable = { #set default to 900
					which = dev_click_max
					value = 900
				}
			}
		}
	}
	option = {
		name = increase_dev_event.11.aa
		custom_tooltip = increase_dev_event.11.aa.t
		hidden_effect = {
			REB = {
				set_variable = {
					which = dev_click_max
					value = 960
				}
			}
		}
	}
	option = {	
		name = increase_dev_event.11.bb
		custom_tooltip = increase_dev_event.11.bb.t
		highlight = yes
		hidden_effect = {
			REB = {
				set_variable = {
					which = dev_click_max
					value = 900
				}
			}
		}
	}
	#option = {	
	#	name = increase_dev_event.11.cc
	#	REB = {
	#		set_variable = {
	#			which = dev_click_max
	#			value = 840
	#		}
	#	}
	#}
	option = {
		name = increase_dev_event.11.dd
		custom_tooltip = increase_dev_event.11.dd.t
		hidden_effect = {
			REB = {
				set_variable = {
					which = dev_click_max
					value = 780
				}
			}
		}
	}
	#option = {	
	#	name = increase_dev_event.11.ee
	#	REB = {
	#		set_variable = {
	#			which = dev_click_max
	#			value = 720
	#		}
	#	}
	#}
	option = {	
		name = increase_dev_event.11.ff
		custom_tooltip = increase_dev_event.11.ff.t
		hidden_effect = {
			REB = {
				set_variable = {
					which = dev_click_max
					value = 660
				}
			}
		}
	}
	option = {	
		name = increase_dev_event.11.gg
		custom_tooltip = increase_dev_event.11.gg.t
		highlight = yes
		hidden_effect = {
			REB = {
				set_variable = {
					which = dev_click_max
					value = 0
				}
			}
		}
	}
}

country_event = {
	# institutions
	id = increase_dev_event.10
	title = increase_dev_event.10.t
	desc = increase_dev_event.10.d
	picture = INVENTION_eventPicture
	hidden = yes
	is_triggered_only = yes

	trigger = {
		REB = {
			check_variable = { #disable option
				which = dev_click_max
				value = 600
			}
		}
	}

	immediate = {
		log = "+institution"
		1326 = { add_province_triggered_modifier = counter_of_institutions }
		REB = {
			set_variable = { which = feudalism_no		value = 1.5	}
			set_variable = { which = renaissance_no		value = 1	}
			set_variable = { which = new_world_i_no		value = 1	}
			set_variable = { which = printing_press_no	value = 1	}
			set_variable = { which = global_trade_no	value = 1	}
			set_variable = { which = manufactories_no	value = 1	}
			set_variable = { which = enlightenment_no	value = 1	}
			
			export_to_variable = { which = current_year	value = trigger_value:is_year }
			
			trigger_switch = {
				on_trigger = is_institution_enabled
				renaissance = {
					if = { limit = { NOT = { check_variable = { which = renaissance_year value = 1400 } } } # check if institution year set
						set_variable = { which = renaissance_year	which = current_year } #set institution year
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1450 }
					subtract_variable 	  = { which = penalty		which = renaissance_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalism_no		which = penalty }	log = "[This.feudalism_no.GetValue]"
					change_variable = { which = renaissance_no		which = penalty }	log = "[This.renaissance_no.GetValue]"
				}
				new_world_i = {
					if = { limit = { NOT = { check_variable = { which = new_world_i_year value = 1400 } } }
						set_variable = { which = new_world_i_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1500 }
					subtract_variable 	  = { which = penalty		which = new_world_i_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalism_no		which = penalty }	log = "[This.feudalism_no.GetValue]"
					change_variable = { which = renaissance_no		which = penalty }	log = "[This.renaissance_no.GetValue]"
					change_variable = { which = new_world_i_no		which = penalty }	log = "[This.new_world_i_no.GetValue]"
				}
				printing_press = {
					if = { limit = { NOT = { check_variable = { which = printing_press_year value = 1400 } } }
						set_variable = { which = printing_press_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1550 }
					subtract_variable 	  = { which = penalty		which = printing_press_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalism_no		which = penalty }
					change_variable = { which = renaissance_no		which = penalty }
					change_variable = { which = new_world_i_no		which = penalty }
					change_variable = { which = printing_press_no	which = penalty }
				}
				global_trade = {
					if = { limit = { NOT = { check_variable = { which = global_trade_year value = 1400 } } }
						set_variable = { which = global_trade_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1600 }
					subtract_variable 	  = { which = penalty		which = global_trade_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalism_no		which = penalty }
					change_variable = { which = renaissance_no		which = penalty }
					change_variable = { which = new_world_i_no		which = penalty }
					change_variable = { which = printing_press_no	which = penalty }
					change_variable = { which = global_trade_no		which = penalty }
				}
				manufactories = {
					if = { limit = { NOT = { check_variable = { which = manufactories_year value = 1400 } } }
						set_variable = { which = manufactories_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1650 }
					subtract_variable 	  = { which = penalty		which = manufactories_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalism_no		which = penalty }
					change_variable = { which = renaissance_no		which = penalty }
					change_variable = { which = new_world_i_no		which = penalty }
					change_variable = { which = printing_press_no	which = penalty }
					change_variable = { which = global_trade_no		which = penalty }
					change_variable = { which = manufactories_no	which = penalty }
				}
				enlightenment = {
					if = { limit = { NOT = { check_variable = { which = enlightenment_year value = 1400 } } }
						set_variable = { which = enlightenment_year	which = current_year }
					}
					set_variable 		  = { which = penalty		which = current_year }
					Math_effect_MAX_value = { which = penalty		value = 1700 }
					subtract_variable 	  = { which = penalty		which = enlightenment_year }
					divide_variable 	  = { which = penalty		value = 100 }
					Math_effect_MIN_value = { which = penalty		value = 0.5 }
					
					change_variable = { which = feudalism_no		which = penalty }
					change_variable = { which = renaissance_no		which = penalty }
					change_variable = { which = new_world_i_no		which = penalty }
					change_variable = { which = printing_press_no	which = penalty }
					change_variable = { which = global_trade_no		which = penalty }
					change_variable = { which = manufactories_no	which = penalty }
					change_variable = { which = enlightenment_no	which = penalty }
				}
			}
		}
	}
	
	option = {
		#hidden
	}
}

country_event = {
	# update lowest dev cost provence
	id = increase_dev_event.3
	title = increase_dev_event.3.t
	desc = increase_dev_event.3.d
	picture = INVENTION_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		always = yes
	}
	immediate = {
		HiddenUpdateDevFlagEffect = yes
		#HiddenUpdateDipDevFlagEffect = yes
	}
	option = {
		random_owned_province = {
			limit = {
				has_province_flag = CheapDevTargetFlag
			}
			hidden_effect = { 
				owner = { clr_country_flag = HitPointCap }
			}
			owner = {
				change_variable = { which = dev_adm_clicks	value = 1 }
				change_variable = { which = dev_sum_clicks	value = 1 }
			}
			export_dev_cost_of_province = { name = LocalDeVCost }
			owner =  {
				hidden_effect = { 	
					set_variable = { which = LocalDeVCost which = PREV }
					multiply_variable = { which = LocalDeVCost value = -1 }
					set_variable = { which = PrevLocalDeVCost which = LocalDeVCost }
					log = "[This.LocalDeVCost.GetValue] lost that much adm to dev [Prev.GetName] as this [This.GetName]"
					add_power_effect = { command=add_adm_power	variable=LocalDeVCost }
				}
			} 	
			add_base_tax  = 1
		} 	
	}	
}				
		
country_event = {
	# update lowest dev cost provence
	id = increase_dev_event.4
	title = increase_dev_event.4.t
	desc = increase_dev_event.4.d
	picture = INVENTION_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		always = yes
	}
	immediate = {
		HiddenUpdateDevFlagEffect = yes
		HiddenUpdateDipDevFlagEffect = yes
	}
	option = {
		random_owned_province = {
			limit = {
				has_province_flag = CheapDipTargetFlag
			}
			hidden_effect = { 
				owner = { clr_country_flag = HitPointCap }
			} 
			owner = {
				change_variable = { which = dev_dip_clicks	value = 1 }
				change_variable = { which = dev_sum_clicks	value = 1 }
			}
			export_dev_cost_of_province = { name = LocalDeVCost }
			owner =  {
				hidden_effect = { 	
					set_variable = { which = LocalDeVCost which = PREV }
					multiply_variable = { which = LocalDeVCost value = -1 }
					set_variable = { which = PrevLocalDeVCost which = LocalDeVCost }
					log = "[This.LocalDeVCost.GetValue] lost that much dip to dev [Prev.GetName] as this [This.GetName]"
					add_power_effect = { command=add_dip_power	variable=LocalDeVCost }
				}
			} 	
			add_base_production = 1
		}
	}
}		

country_event = {
	# update lowest dev cost provence
	id = increase_dev_event.5
	title = increase_dev_event.5.t
	desc = increase_dev_event.5.d
	picture = INVENTION_eventPicture
	hidden = yes
	is_triggered_only = yes
	trigger = {
		always = yes
	}
	immediate = {
		HiddenUpdateDevFlagEffect = yes
		#HiddenUpdateDipDevFlagEffect = yes
	}
	option = {
		random_owned_province = {
			limit = {
				has_province_flag = CheapDevTargetFlag
			}
			hidden_effect = { 
				owner = { clr_country_flag = HitPointCap }
			} 
			owner = {
				change_variable = { which = dev_mil_clicks	value = 1 }
				change_variable = { which = dev_sum_clicks	value = 1 }
			}
			export_dev_cost_of_province = { name = LocalDeVCost }
			owner =  {
				hidden_effect = { 	
					set_variable = { which = LocalDeVCost which = PREV }
					multiply_variable = { which = LocalDeVCost value = -1 }
					set_variable = { which = PrevLocalDeVCost which = LocalDeVCost }
					log = "[This.LocalDeVCost.GetValue] lost that much mil to dev [Prev.GetName] as this [This.GetName]"
					add_power_effect = { command=add_mil_power	variable=LocalDeVCost }
				} 	
			} 	
			add_base_manpower = 1
		}
	}	
}